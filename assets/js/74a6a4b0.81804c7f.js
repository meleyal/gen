"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6982],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,d=p["".concat(s,".").concat(m)]||p[m]||h[m]||i;return n?a.createElement(d,o(o({ref:t},c),{},{components:n})):a.createElement(d,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6997:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return h}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o={title:"Machine Learning"},l=void 0,s={unversionedId:"generative/machine-learning",id:"generative/machine-learning",isDocsHomePage:!1,title:"Machine Learning",description:'"001100 010010 011110 100001"',source:"@site/docs/generative/machine-learning.md",sourceDirName:"generative",slug:"/generative/machine-learning",permalink:"/generative-music-with-javascript/generative/machine-learning",tags:[],version:"current",frontMatter:{title:"Machine Learning"},sidebar:"main",previous:{title:"Evolution",permalink:"/generative-music-with-javascript/generative/evolution"},next:{title:"Sonification",permalink:"/generative-music-with-javascript/generative/sonification"}},u=[{value:"Theory",id:"theory",children:[{value:"How ML &quot;learns&quot;",id:"how-ml-learns",children:[]},{value:"Musical example",id:"musical-example",children:[]},{value:"Definitions",id:"definitions",children:[]}]},{value:"Magenta",id:"magenta",children:[{value:"MusicRNN",id:"musicrnn",children:[]}]}],c={toc:u};function h(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},'"001100 010010 011110 100001"'),(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://futurama.fandom.com/wiki/Time_Code"},"Bender, Futurama"))),(0,i.kt)("p",null,"TODO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Neural networks"),(0,i.kt)("li",{parentName:"ul"},"Recurrent neural networks (RNN)"),(0,i.kt)("li",{parentName:"ul"},"Convolutional neural networks (CNN)"),(0,i.kt)("li",{parentName:"ul"},"Generative adversarial networks (GAN)"),(0,i.kt)("li",{parentName:"ul"},"Variational Auto Encoders (VAE)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://magenta.tensorflow.org/"},"https://magenta.tensorflow.org/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://paperswithcode.com/"},"https://paperswithcode.com/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://arxiv.org/archive/cs"},"https://arxiv.org/archive/cs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.kaggle.com/"},"https://www.kaggle.com/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=HKRJuz6o2uY"},"https://www.youtube.com/watch?v=HKRJuz6o2uY"))),(0,i.kt)("p",null,"In this chapter we're going to look at how to use Machine Learning (ML) to\ngenerate music. So far, we've defined our own rules for what we want to make.\nWith ML, we'll see how we can instead teach a system to learn and extrapolate\nit's own rules, by learning from existing data."),(0,i.kt)("h2",{id:"theory"},"Theory"),(0,i.kt)("p",null,"ML is a huge topic, but at its core is a simple objective: to teach a program to\nmodel a set of data. This model can then be used to understand (or generate) new\ndata that the program has never seen before."),(0,i.kt)("p",null,"We won't delve too deep here, as we'll see we can go a long way without much\ntheory, but it's useful to have a rough idea of how ML works in order to\nevaluate different models and what they're capable of."),(0,i.kt)("p",null,"It's worth noting that we're using the term ML loosely to cover neural networks,\ndeep learning, and more specifically for the purposes of this chapter,\ngenerative deep learning."),(0,i.kt)("h3",{id:"how-ml-learns"},'How ML "learns"'),(0,i.kt)("p",null,"The gist of the learning process is as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'We first define a model, which is a series of "layers" of "neurons" that\nperform calculations on the data as it passes through them. The type and\nnumber of layers and neurons depend on the type of the data and the task we\'re\ntrying to accomplish. The layers and their arrangement, without any learned\nweights (see next point) is also called a "network".')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'We initialize the model with a set of random "weights" (random floating point\nnumbers) for each layer in the network. These weights define how data passes\nbetween the layers/neurons and are where the actual "learning" is stored.')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We train the model by showing it data that includes the correct answer for the\ntask. If we're training a model to identify photos of cats, our training data\nwould consist of lots of photos labeled 'cat' or 'not cat'.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We repeat this process for all of the examples in our training data, and for\nmultiple iterations (\"epochs\"). As it goes, the model is constantly adjusting\nthe weights between neurons to try and get it's final output to match the\ncorrect answer. In this way, the model learns which pattern of neurons signify\na correct answer. If the data passing through triggers those neurons, it must\nbe a cat! In other words, it's finding the optimal set of weights that model\nimage data that is 'cat' and 'not cat'."))),(0,i.kt)("p",null,"This is a very (very) simplified view of what's happening in a neural network,\nand there are many variations on this process. It's also rather abstract, so a\nmusical example may help."),(0,i.kt)("h3",{id:"musical-example"},"Musical example"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Suppose we train a model by showing it MIDI files of all of Bach's works. The\nnetwork might learn that given an A, the next note is often a G#, with a\ncorresponding C note in the bass. The more it sees that pattern, the more\ncertain it becomes (i.e. that neural path becomes stronger). As it sees other\nexamples, it may begin to learn more generally that the next note is often two\nsteps up from the first, and the bass note is 5 steps down.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Now, when we give our model a note, and ask it to predict a next note and a\nbass note, it might predict the pattern it has learned. The likelihood of it\npredicting this pattern corresponds to how certain it is, which is a product\nof how many times it has seen the pattern in comparison with others.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In this way, we can see how the model's learning is highly dependent on the\ntype and amount of data it was trained on. A model trained on Bach would be\nuseless at generating 12-bar blues. Similarly a model trained on a few\nexamples would only be able to reproduce patterns found in those examples."))),(0,i.kt)("h3",{id:"definitions"},"Definitions"),(0,i.kt)("p",null,"As with any scientific discipline, ML comes with an array of acronyms and lingo\nthat can be overwhelming to the uninitiated. Just a handful of these terms are\nenough to navigate this chapter:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Network")," \u2013 The specific arrangement of layers used to create the model.\nThese often have 3-letter acronyms that define the type and purpose of the\nnetwork e.g. RNN (Recurrent Neural Network), CNN (Convolutional Neural\nNetwork), (GAN) Generative Adversarial Network, VAE (Variational Auto\nEncoder), etc.")),(0,i.kt)("p",null,"Gist: Optimize a loss function = find optimal set of weights to model the data"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Init with random weights"),(0,i.kt)("li",{parentName:"ul"},"Model takes in data as input (training data with labels, supervised vs.\nunsupervised?)"),(0,i.kt)("li",{parentName:"ul"},"At each pass over the data, it compares it's output to the actual data (i.e.\nerror)"),(0,i.kt)("li",{parentName:"ul"},"It nudges all the weights and tries again"),(0,i.kt)("li",{parentName:"ul"},"If the error rate decreases, it knows it's going in the right direction"),(0,i.kt)("li",{parentName:"ul"},"In this way, the network learns to model the data (training the model, the\nlearning in machine learning)"),(0,i.kt)("li",{parentName:"ul"},"Now we have a trained model, it can infer a result given new data it has never\nseen")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Different models for different tasks"),(0,i.kt)("li",{parentName:"ul"},"ML, Deep Learning, AI"),(0,i.kt)("li",{parentName:"ul"},"Model vs network (names, versions)"),(0,i.kt)("li",{parentName:"ul"},"Training"),(0,i.kt)("li",{parentName:"ul"},"Prediction/inference"),(0,i.kt)("li",{parentName:"ul"},"Pre-built models"),(0,i.kt)("li",{parentName:"ul"},"Pre-trained models, checkpoints")),(0,i.kt)("h2",{id:"magenta"},"Magenta"),(0,i.kt)("h3",{id:"musicrnn"},"MusicRNN"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"music_rnn = new mm.MusicRNN(\n  'https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/basic_rnn'\n)\nmusic_rnn.initialize()\n\nconst { createEnv, fx, inst, seq, music } = tuplet\nconst { c4, d4, e4, f4, g4, c5, rest } = music.pitches\nconst { wn, qn, den, sn, hn, ent } = music.durations\n\nconst notes = [\n  [c4, qn],\n  [c4, qn],\n  [c4, den],\n  [d4, sn],\n  [e4, qn],\n]\n\nconsole.log(notes)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"MusicVAE")))}h.isMDXComponent=!0}}]);