"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[167],{3905:function(n,e,t){t.d(e,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var c=r.createContext({}),p=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},l=function(n){var e=p(n.components);return r.createElement(c.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,c=n.parentName,l=s(n,["components","mdxType","originalType","parentName"]),m=p(t),d=o,g=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(g,i(i({ref:e},l),{},{components:t})):r.createElement(g,i({ref:e},l))}));function d(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=n,s.mdxType="string"==typeof n?n:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2771:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i={title:"Repetition"},s=void 0,c={unversionedId:"generative/repetition",id:"generative/repetition",isDocsHomePage:!1,title:"Repetition",description:"Repetition is a fundamental aspect of music. From individual phrases to entire",source:"@site/docs/generative/repetition.md",sourceDirName:"generative",slug:"/generative/repetition",permalink:"/generative-music-with-javascript/generative/repetition",tags:[],version:"current",frontMatter:{title:"Repetition"},sidebar:"main",previous:{title:"Timing",permalink:"/generative-music-with-javascript/music/timing"},next:{title:"Randomness",permalink:"/generative-music-with-javascript/generative/randomness"}},p=[{value:"Notes",id:"notes",children:[]},{value:"Loops",id:"loops",children:[]},{value:"Alternation",id:"alternation",children:[]},{value:"Layering",id:"layering",children:[]},{value:"Phasing",id:"phasing",children:[]}],l={toc:p};function u(n){var e=n.components,t=(0,o.Z)(n,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Repetition is a fundamental aspect of music. From individual phrases to entire\nsong structures, we can find repetition in music at every zoom level."),(0,a.kt)("p",null,"In this chapter, we'll see how to apply repetition, starting with simple loops,\nand building up to creating variation through alternation and layering. Through\nrepetition, we can define discrete patterns and arrange them to form larger\nmusical works, and open the door to generating infinitely evolving music. So\nlet's get started!"),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("p",null,"We already learned how to create repeating notes in the music/timing chapter. To\nrecap:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { metronome, sampler, music, phrase } = tuplet\nconst { c4 } = music.pitches\nconst { qn } = music.durations\n\n;(async () => {\n  const notes = [[c4, qn]]\n  const piano = await sampler('piano')\n  const metro = metronome({ bpm: 60 })\n  const melody = phrase(notes, { loop: true })\n\n  metro.on('tick', (time) => {\n    piano.play(melody.at(time))\n  })\n\n  metro.start()\n})()\n")),(0,a.kt)("p",null,"Though it doesn't look (or sound) like much, it's worth noting that we just\ncreated some infinite music! Left undisturbed, our humble note could in theory\nrepeat for eternity..."),(0,a.kt)("p",null,"(See also, music/sequencing chapter)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Metronome / sync to beat"),(0,a.kt)("li",{parentName:"ul"},"Note duration")),(0,a.kt)("h2",{id:"loops"},"Loops"),(0,a.kt)("p",null,"Music is built of repeating patterns, often in groups of 4, 8 or 16 beats (i.e.\n1, 2 or 4 bars)."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Looping / Rings (see music/phrases)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { metronome, sampler, music, phrase } = tuplet\nconst { c4, d4, e4, f4, g4, a4, b4, c5 } = music.pitches\nconst { qn } = music.durations\n\n;(async () => {\n  const notes = [\n    [c4, qn],\n    [d4, qn],\n    [e4, qn],\n    [f4, qn],\n    [g4, qn],\n    [a4, qn],\n    [b4, qn],\n    [c5, qn],\n  ]\n  const piano = await sampler('piano')\n  const metro = metronome({ bpm: 60 })\n  const melody = phrase(notes, { loop: true })\n\n  metro.on('tick', (time) => {\n    piano.play(melody.at(time))\n  })\n\n  metro.start()\n})()\n")),(0,a.kt)("h2",{id:"alternation"},"Alternation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Alternating (ABBA, ABAB, etc.)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { metronome, sampler, music, phrase } = tuplet\nconst { c4, d4, e4, f4, g4, a4, b4, c5 } = music.pitches\nconst { qn } = music.durations\n\n;(async () => {\n  const a = phrase([\n    [c4, qn],\n    [d4, qn],\n    [e4, qn],\n    [f4, qn],\n    [g4, qn],\n    [a4, qn],\n    [b4, qn],\n    [c5, qn],\n  ])\n  const b = phrase([\n    [c5, qn],\n    [b4, qn],\n    [a4, qn],\n    [g4, qn],\n    [f4, qn],\n    [e4, qn],\n    [d4, qn],\n    [c4, qn],\n  ])\n  const piano = await sampler('piano')\n  const metro = metronome({ bpm: 60 })\n  const melody = phrase.join([a, b], { loop: true })\n\n  metro.on('tick', (time) => {\n    piano.play(melody.at(time))\n  })\n\n  metro.start()\n})()\n")),(0,a.kt)("h2",{id:"layering"},"Layering"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Round > Canon > Fugue")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { metronome, sampler, music, phrase } = tuplet\nconst { c4, d4, e4, f4, g4, c5, rest } = music.pitches\nconst { wn, qn, den, sn, hn, ent } = music.durations\n\n;(async () => {\n  const rests = [[rest, wn]]\n\n  const notes = [\n    [c4, qn],\n    [c4, qn],\n    [c4, den],\n    [d4, sn],\n    [e4, qn],\n\n    [e4, den],\n    [d4, sn],\n    [e4, den],\n    [f4, sn],\n    [g4, hn],\n\n    [c5, ent],\n    [c5, ent],\n    [c5, ent],\n    [g4, ent],\n    [g4, ent],\n    [g4, ent],\n    [e4, ent],\n    [e4, ent],\n    [e4, ent],\n    [c4, ent],\n    [c4, ent],\n    [c4, ent],\n\n    [g4, den],\n    [f4, sn],\n    [e4, den],\n    [d4, sn],\n    [c4, hn],\n  ]\n\n  const piano = await sampler('piano')\n  const metro = metronome({ bpm: 60 })\n\n  const theme = phrase(notes).repeat(2)\n\n  const responseA = phrase\n    .join([phrase(rests), phrase(notes)])\n    .repeat(2)\n    .transpose(12)\n\n  const responseB = phrase\n    .join([phrase(rests).repeat(2), phrase(notes)])\n    .repeat(2)\n    .transpose(-12)\n\n  metro.on('tick', (time) => {\n    piano.play(theme.at(time))\n    piano.play(responseA.at(time))\n    piano.play(responseB.at(time))\n  })\n\n  metro.start()\n})()\n")),(0,a.kt)("h2",{id:"phasing"},"Phasing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { metronome, sampler, music, phrase } = tuplet\nconst { b4, e4, fs4, cs5, d5 } = music.pitches\nconst { sn } = music.durations\n\n;(async () => {\n  const notes = [\n    [e4, sn],\n    [fs4, sn],\n    [b4, sn],\n    [cs5, sn],\n    [d5, sn],\n    [fs4, sn],\n    [e4, sn],\n    [cs5, sn],\n    [b4, sn],\n    [fs4, sn],\n    [d5, sn],\n    [cs5, sn],\n  ]\n\n  const piano = await sampler('piano')\n  const metro = metronome({ bpm: 60 })\n  const melody = phrase(notes, { loop: true })\n\n  let phase = 0\n\n  metro.on('tick', (time) => {\n    piano.play(melody.at(time))\n    piano.play(melody.at(time + phase))\n    phase += 0.000009\n  })\n\n  metro.start()\n})()\n")))}u.isMDXComponent=!0}}]);